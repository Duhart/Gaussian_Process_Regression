"0","# Inputs:"
"0","# x: a vector of length N or matrix of dimensions N x m."
"0","# X: a vector of length n or matrix of dimensions n x m."
"0","# sigma: a number."
"0","# l: a number."
"0","# Outputs:"
"0","# A vector of length N "
"0","nu <- function(x,X,sigma = 1, l = 1, C = 1){"
"0","  if(is.null(dim(X))){"
"0","    N <- length(x)"
"0","    n <- length(X)"
"0","    m <- 1"
"0","  }else{"
"0","    N <- nrow(x)"
"0","    n <- nrow(X)"
"0","    m <- ncol(X)"
"0","  }"
"0","  id <- diag(n)"
"0","  A <- solve(matrix_k(X,X,l, C) + sigma^2 * id)"
"0","  if(is.null(dim(X))){"
"0","    res <- 1:N %>% lapply(function(j){"
"0","      k <- cov_ker(x[j],x[j],l, C) # With current kernel this is always 1"
"0","      vec_k <- matrix_k(x[j],X,l,C)"
"0","      y <- k - vec_k %*% A %*% t(vec_k)"
"0","      return(y[1,1])"
"0","      }) %>% unlist()"
"0","  }else{"
"0","    res <- 1:N %>% lapply(function(j){"
"0","      k <- cov_ker(x[j,],x[j,],l,C) # With current kernel this is always 1"
"0","      vec_k <- matrix_k(x[j,],X,l,C)"
"0","      y <- k - vec_k %*% A %*% t(vec_k)"
"0","      return(y[1,1])"
"0","      }) %>% unlist()"
"0","  }"
"0","  return(res)"
"0","}"
